#!/usr/bin/env php
<?php

declare(strict_types=1);

use DI\ContainerBuilder;
use Psr\Container\ContainerInterface;
use Symfony\Component\Console\Application;
use Symfony\Component\Console\CommandLoader\ContainerCommandLoader;
use Symfony\Component\Messenger\Command\ConsumeMessagesCommand;
use Symfony\Component\Messenger\Command\FailedMessagesRemoveCommand;
use Symfony\Component\Messenger\Command\FailedMessagesRetryCommand;
use Symfony\Component\Messenger\Command\FailedMessagesShowCommand;

if ('cli' !== PHP_SAPI) {
    die('This is only accessible through console.');
}

require __DIR__ . '/../vendor/autoload.php';

try {
    $containerBuilder = new ContainerBuilder();

    // Set up settings
    $settings = require __DIR__ . '/../app/settings.php';
    $settings($containerBuilder);

    // Set up dependencies
    $dependencies = require __DIR__ . '/../app/dependencies.php';
    $dependencies($containerBuilder);

    /** @var ContainerInterface $container */
    $container = $containerBuilder->build();

    /** @var Application $application */
    $application = $container->get(Application::class);

    // Register symfony messenger commands here
    $lazyLoaderCommands = new ContainerCommandLoader(
        $container,
        [
            ConsumeMessagesCommand::getDefaultName() => ConsumeMessagesCommand::class,
            FailedMessagesShowCommand::getDefaultName() => FailedMessagesShowCommand::class,
            FailedMessagesRemoveCommand::getDefaultName() => FailedMessagesRemoveCommand::class,
            FailedMessagesRetryCommand::getDefaultName() => FailedMessagesRetryCommand::class,
        ]
    );

    $application->setCommandLoader($lazyLoaderCommands);

    exit($application->run());
} catch (Throwable $exception) {
    echo $exception->getMessage();
    exit(1);
}

